# terraform-plan.yml
name: "Terraform Plan"

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write # Required for OIDC
  contents: read # Required to check out code
  pull-requests: write # Required to post a PR comment

jobs:
  # --- NEW JOB: CHECKOV SCAN ---
  checkov-scan:
    name: "Security Scan (Checkov)"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # This is the official, maintained action for Checkov
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: . # Scan the root directory
          framework: terraform # Specify we are scanning terraform
          output_format: github_pull_request # This will post a comment
          soft_fail: true # We'll let the check pass so we can see the plan

  # --- UPDATED JOB: TERRAFORM PLAN ---
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    needs: checkov-scan # <-- This now waits for the new Checkov scan

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan

      - name: Convert plan to text
        run: terraform show -no-color tfplan > tfplan.txt

      - name: Add Plan to PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const { readFileSync } = require('fs');
            const plan = readFileSync('tfplan.txt', 'utf8');

            const output = `#### Terraform Plan ðŸ“– (OIDC)

            \`\`\`terraform
            ${plan}
            \`\`\`

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
